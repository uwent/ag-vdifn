version: 2.1
orbs:
  ruby: circleci/ruby@2.1.3
  node: circleci/node@5.2.0

jobs:
  build:
    docker:
      - image: cimg/ruby:3.3.3-node
        environment:
          PG_HOST: localhost
          PG_USER: postgres
          RAILS_ENV: test
          RACK_ENV: test
      - image: cimg/postgres:16.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: vdifn_test
          POSTGRES_PASSWORD: 'password'
    executor: ruby/default
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
    steps:
      - checkout
      - ruby/install-deps:
          key: gems-{{ checksum ".ruby-version" }}
      - run:
          name: Set up database
          command: bundle exec rails db:setup
      - run:
          name: Run rails tests
          command: bundle exec rspec
      - restore_cache:
          name: Restore pnpm package cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-9 --activate
            pnpm config set store-dir .pnpm-store
      - run:
          name: Install dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm package cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - run:
          name: Run vitest
          command: pnpm test
      - run:
          name: Run vite build
          command: pnpm build
